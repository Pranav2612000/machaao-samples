buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.31.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://dl.bintray.com/machaao/maven' }
    maven {
        url "https://machaao-android-builds.s3.amazonaws.com/sdk/android/snapshots"
    }
    mavenLocal()
    jcenter()
}

apply plugin: 'io.fabric'


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.machaao.sample.generic"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 233
        versionName "0.651"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            applicationIdSuffix ".debug"
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "AD_PUBLISHER_ID", "\"ca-app-pub-3026652684227471~7994236482\""
            resValue "string", "app_name", "Sample.Bot (Dev)"
            resValue "string", "facebook_app_id", "649919521823201"
            resValue "string", "fb_login_protocol_scheme", "fb[649919521823201]"


        }

        release {
            minifyEnabled true
            shrinkResources true
            applicationIdSuffix ".release"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "AD_PUBLISHER_ID", "\"ca-app-pub-3026652684227471~7994236482\""
            resValue "string", "app_name", "Sample.Bot"
            resValue "string", "facebook_app_id", "[340485299433293]"
            resValue "string", "fb_login_protocol_scheme", "fb[340485299433293]"

        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    dexOptions {
        jumboMode true          // required
    }


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
    }
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

//    implementation project(':machaao-sdk')
    implementation('com.machaao.android:machaao-sdk:0.1.150-SNAPSHOT') {
        transitive = true
    }

//    implementation (name: 'machaao-sdk', ext: 'aar')
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation('com.paytm:pgplussdk:1.3.3') {
        transitive = true
    }
//    implementation 'com.google.android.material:material:1.0.0'
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'androidx.appcompat:appcompat:1.0.2'
//    implementation 'com.google.android.gms:play-services:12.0.1'
//    implementation 'com.google.android.gms:play-services-auth:17.0.0'

//    implementation 'com.google.firebase:firebase-core:17.0.1'
//    implementation 'com.google.firebase:firebase-messaging:19.0.1'
//    implementation 'com.google.firebase:firebase-auth:18.1.0'
//    implementation 'net.danlew:android.joda:2.9.9.1'


//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == 'androidx') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.3'
            }
        }

    }
}

//apply plugin: 'com.google.gms.google-services'
